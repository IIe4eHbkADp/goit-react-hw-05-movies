{"version":3,"file":"static/js/837.e5b82057.chunk.js","mappings":"meAGMA,EAAUC,EAAAA,GAAAA,OAAH,oNAUPC,EAAiBD,EAAAA,GAAAA,IAAH,0CAIdE,EAAiBF,EAAAA,GAAAA,IAAH,yCAIdG,EAAiBH,EAAAA,GAAAA,IAAH,8CAIdI,EAAQJ,EAAAA,GAAAA,GAAH,6FAKLK,EAAOL,EAAAA,GAAAA,EAAH,sBAEJM,EAAUN,EAAAA,GAAAA,GAAH,+FAIPO,EAAOP,EAAAA,GAAAA,KAAH,+FAKJQ,GAAoBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,sPAejBU,EAAUV,EAAAA,GAAAA,IAAH,iFAMPW,EAAWX,EAAAA,GAAAA,GAAH,kGAQRY,EAA2BZ,EAAAA,GAAAA,EAAH,+C,2HCjC9B,EAhCgB,WACZ,IAAQa,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAgBC,EAAAA,EAAAA,SAAO,GAS7B,OAPAC,EAAAA,EAAAA,YAAU,WCNc,IAACC,EDOjBH,EAAcI,UCPGD,EDQJR,ECPdU,EAAAA,EAAAA,IAAA,6CAAgDF,EAAhD,4BAHD,mCAGC,4BDOuBG,KAAKP,GAE/BC,EAAcI,SAAU,CAC3B,GAAE,CAACT,IAECG,EAKuC,IAApCA,EAAYS,KAAKC,QAAQC,QACpB,wBACIX,EAAYS,KAAKC,QAAQE,KAAI,SAAAC,GAC1B,IAAOC,EAAuBD,EAAvBC,OAAQC,EAAeF,EAAfE,QAASV,EAAMQ,EAANR,GACxB,OACI,2BACI,0BAAG,SAAC,KAAD,sBAAH,IAAyBS,MACzB,SAAC,KAAD,UAA2BC,MAFtBV,EAKhB,OACE,8CAfR,IAiBd,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/Reviews.js","fetch/fetchReviews.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst BackBTN = styled.button`\n  margin-bottom: 10px;\n  padding: 5px 30px;\n  color: white;\n  box-shadow: #125205 1px 1px 1px, #125205 2px 2px 1px;\n  background-color: #0abf43;\n  border: none;\n  font-weight: 700;\n`;\n\nconst MainDetailsBox = styled.div`\n  display: flex;\n`;\n\nconst MainDetailsIMG = styled.img`\n  width: 200px;\n`;\n\nconst TextDetailsBox = styled.div`\n  margin-left: 20px;\n`;\n\nconst Title = styled.h2`\n  color: green;\n  text-shadow: aqua 1px 1px 1px, aqua 2px 2px 1px;\n`;\n\nconst Text = styled.p``;\n\nconst TopText = styled.h3`\n  color: white;\n  text-shadow: black 1px 1px 1px, black 2px 2px 1px;\n`;\nconst Span = styled.span`\n  color: white;\n  text-shadow: black 1px 1px 1px, black 2px 2px 1px;\n`;\n\nconst AdditionalNavLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 700;\n  color: black;\n\n  &.active {\n    color: green;\n    text-decoration: underline;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #075716;\n  }\n`;\nconst CastIMG = styled.img`\n  width: 200px;\n  height: auto;\n  margin-right: 20px;\n`;\n\nconst CastItem = styled.li`\n  display: flex;\n\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst AdditionalReviewsContent = styled.p`\n  text-align: justify;\n`;\n\nexport {\n  BackBTN,\n  MainDetailsBox,\n  MainDetailsIMG,\n  TextDetailsBox,\n  Title,\n  Text,\n  TopText,\n  Span,\n  AdditionalNavLink,\n  CastItem,\n  CastIMG,\n  AdditionalReviewsContent,\n};\n","import { fetchReviews } from \"fetch/fetchReviews\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { AdditionalReviewsContent, Span } from \"./MovieDetails.styled\"\n\nconst Reviews = () => {\n    const { movieId } = useParams()\n    const [movieReview, setMovieReview] = useState(null)\n    const isFirstRender = useRef(true)\n\n    useEffect(() => {\n        if (isFirstRender.current) {\n            fetchReviews(movieId).then(setMovieReview)\n        }\n        isFirstRender.current = false\n    }, [movieId])\n\n    if (!movieReview) {\n        return null\n    }\n\n    return (\n            movieReview.data.results.length !== 0 ?\n                (<ul>\n                    {movieReview.data.results.map(review => {\n                        const {author, content, id} = review\n                        return (\n                            <li key={id}>\n                                <p><Span>Author:</Span> {author}</p>\n                                <AdditionalReviewsContent>{content}</AdditionalReviewsContent>\n                            </li>\n                        )\n                    })}</ul>) \n                    : (<p>There is no review</p>)       \n    )\n}\n\nexport default Reviews ","import axios from \"axios\"\n\nconst key=\"7cdf478795ad4657f8647bebd5408f4d\"\n\nexport const fetchReviews = (id) => {\n    return axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`)\n}"],"names":["BackBTN","styled","MainDetailsBox","MainDetailsIMG","TextDetailsBox","Title","Text","TopText","Span","AdditionalNavLink","NavLink","CastIMG","CastItem","AdditionalReviewsContent","movieId","useParams","useState","movieReview","setMovieReview","isFirstRender","useRef","useEffect","id","current","axios","then","data","results","length","map","review","author","content"],"sourceRoot":""}