{"version":3,"file":"static/js/795.4dcc704a.chunk.js","mappings":"mPA0DA,EAnDqB,WAAO,IAAD,IACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACvCC,GAAgBC,EAAAA,EAAAA,SAAO,GAQ7B,IANAC,EAAAA,EAAAA,YAAU,WCVgB,IAACC,EDWnBH,EAAcI,UCXKD,EDYJE,OAAOd,GCXvBe,EAAAA,EAAAA,IAAA,6CAAgDH,EAAhD,oBAHD,mCAGC,qBDWiCI,KAAKZ,GACvCK,EAAcI,SAAU,CAC7B,GAAE,CAACb,IAECG,EAAL,CAGA,MAA6EA,EAAMc,KAA5EC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,eAAgBC,EAA3C,EAA2CA,aAAcC,EAAzD,EAAyDA,SAAUC,EAAnE,EAAmEA,OAC7DC,EAAY,GAKlB,OAJAD,EAAOE,KAAI,SAAAC,GAEP,OADAF,EAAUG,KAAKD,EAAME,MACdJ,CACV,KAEG,iCACI,SAAC,KAAD,CAASK,KAAK,SAAd,UAAuB,SAAC,KAAD,CAAMC,GAAIzB,EAAV,yBACvB,UAAC,KAAD,WACKa,GAAe,SAAC,KAAD,CAAgBa,IAAG,UA5B3B,mDA4B2B,OAAuBb,GAAec,IAAKb,KAAe,SAAC,KAAD,CAAgBY,IAAI,kEAAkEC,IAAKb,KACxL,UAAC,KAAD,YACI,SAAC,KAAD,UAAQC,KACR,UAAC,KAAD,YAAM,SAAC,KAAD,4BAAN,IAAkCC,EAAaY,QAAQ,OACvD,SAAC,KAAD,wBACA,SAAC,KAAD,UAAOX,KACP,SAAC,KAAD,sBACA,SAAC,KAAD,UAAOE,EAAUU,KAAK,eAG9B,4BACI,SAAC,KAAD,sCACA,2BACI,yBAAI,SAAC,KAAD,CAAmBJ,GAAE,kBAAa9B,EAAb,SAA6BO,MAAO,CAAEC,KAAMH,GAAjE,qBACJ,yBAAI,SAAC,KAAD,CAAmByB,GAAE,kBAAa9B,EAAb,YAAgCO,MAAO,CAAEC,KAAMH,GAApE,8BAGZ,SAAC,EAAA8B,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,QA7BX,CAkCJ,C,mXErDKC,EAAUC,EAAAA,GAAAA,OAAH,oNAUPC,EAAiBD,EAAAA,GAAAA,IAAH,0CAIdE,EAAiBF,EAAAA,GAAAA,IAAH,yCAIdG,EAAiBH,EAAAA,GAAAA,IAAH,8CAIdI,EAAQJ,EAAAA,GAAAA,GAAH,6FAKLK,EAAOL,EAAAA,GAAAA,EAAH,sBAEJM,EAAUN,EAAAA,GAAAA,GAAH,+FAIPO,EAAOP,EAAAA,GAAAA,KAAH,+FAKJQ,GAAoBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,sPAejBU,EAAUV,EAAAA,GAAAA,IAAH,iFAMPW,EAAWX,EAAAA,GAAAA,GAAH,kGAQRY,EAA2BZ,EAAAA,GAAAA,EAAH,+C","sources":["components/MovieDetails/MovieDetails.js","fetch/fetchMovieById.js","components/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import { fetchMovieById } from \"fetch/fetchMovieById\"\nimport { Suspense, useEffect, useRef, useState } from \"react\"\nimport { Link, Outlet, useLocation, useParams } from \"react-router-dom\";\nimport {BackBTN, MainDetailsBox, MainDetailsIMG, TextDetailsBox, Title, Text, TopText, Span, AdditionalNavLink} from \"./MovieDetails.styled\"\n\nconst posterStartPath = \"https://image.tmdb.org/t/p/w600_and_h900_bestv2\"\n\nconst MovieDetails = () => {\n    const { movieId } = useParams()\n    const [movie, setMovie] = useState(null)\n    const location = useLocation()\n    const backLinkHref = location.state?.from ?? \"/\";\n    const isFirstRender = useRef(true)\n\n    useEffect(() => {\n        if (isFirstRender.current) {\n            fetchMovieById(Number(movieId)).then(setMovie)\n        } isFirstRender.current = false\n    }, [movieId])    \n    \n    if (!movie) {\n        return\n    }\n    const {poster_path, title, original_title, vote_average, overview, genres} = movie.data\n    const genreList = []\n    genres.map(genre => {\n        genreList.push(genre.name)\n        return genreList\n    })\n    return (\n        <>\n            <BackBTN type=\"button\"><Link to={backLinkHref}> Go back</Link></BackBTN>\n            <MainDetailsBox>\n                {poster_path ? (<MainDetailsIMG src={`${posterStartPath}${poster_path}`} alt={title} />)  : (<MainDetailsIMG src=\"https://bipbap.ru/wp-content/uploads/2017/06/20121306123427.jpg\" alt={title}/>)}\n                <TextDetailsBox>\n                    <Title>{original_title}</Title>\n                    <Text><Span>Vote avarage:</Span> {vote_average.toFixed(2)}</Text>\n                    <TopText>Overview</TopText>\n                    <Text>{overview}</Text>\n                    <TopText>Genres</TopText>\n                    <Text>{genreList.join(\", \")}</Text>\n                </TextDetailsBox>\n            </MainDetailsBox>\n            <div>\n                <TopText>Additional Information</TopText>\n                <ul>\n                    <li><AdditionalNavLink to={`/movies/${movieId}/cast`} state={{ from: backLinkHref }}>Cast</AdditionalNavLink></li>\n                    <li><AdditionalNavLink to={`/movies/${movieId}/reviews`} state={{ from: backLinkHref }}>Reviews</AdditionalNavLink></li>\n                </ul>\n            </div>\n            <Suspense fallback={null}>\n                <Outlet/>\n            </Suspense>\n            \n        </>\n    )\n}\n\nexport default MovieDetails\n\n","import axios from \"axios\"\n\nconst key=\"7cdf478795ad4657f8647bebd5408f4d\"\n\nexport const fetchMovieById = (id) => {\n    return axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`)\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst BackBTN = styled.button`\n  margin-bottom: 10px;\n  padding: 5px 30px;\n  color: white;\n  box-shadow: #125205 1px 1px 1px, #125205 2px 2px 1px;\n  background-color: #0abf43;\n  border: none;\n  font-weight: 700;\n`;\n\nconst MainDetailsBox = styled.div`\n  display: flex;\n`;\n\nconst MainDetailsIMG = styled.img`\n  width: 200px;\n`;\n\nconst TextDetailsBox = styled.div`\n  margin-left: 20px;\n`;\n\nconst Title = styled.h2`\n  color: green;\n  text-shadow: aqua 1px 1px 1px, aqua 2px 2px 1px;\n`;\n\nconst Text = styled.p``;\n\nconst TopText = styled.h3`\n  color: white;\n  text-shadow: black 1px 1px 1px, black 2px 2px 1px;\n`;\nconst Span = styled.span`\n  color: white;\n  text-shadow: black 1px 1px 1px, black 2px 2px 1px;\n`;\n\nconst AdditionalNavLink = styled(NavLink)`\n  text-decoration: none;\n  font-weight: 700;\n  color: black;\n\n  &.active {\n    color: green;\n    text-decoration: underline;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #075716;\n  }\n`;\nconst CastIMG = styled.img`\n  width: 200px;\n  height: auto;\n  margin-right: 20px;\n`;\n\nconst CastItem = styled.li`\n  display: flex;\n\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nconst AdditionalReviewsContent = styled.p`\n  text-align: justify;\n`;\n\nexport {\n  BackBTN,\n  MainDetailsBox,\n  MainDetailsIMG,\n  TextDetailsBox,\n  Title,\n  Text,\n  TopText,\n  Span,\n  AdditionalNavLink,\n  CastItem,\n  CastIMG,\n  AdditionalReviewsContent,\n};\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","isFirstRender","useRef","useEffect","id","current","Number","axios","then","data","poster_path","title","original_title","vote_average","overview","genres","genreList","map","genre","push","name","type","to","src","alt","toFixed","join","Suspense","fallback","BackBTN","styled","MainDetailsBox","MainDetailsIMG","TextDetailsBox","Title","Text","TopText","Span","AdditionalNavLink","NavLink","CastIMG","CastItem","AdditionalReviewsContent"],"sourceRoot":""}